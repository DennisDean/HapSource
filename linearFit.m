function line_fit_struct = linearFit(x,y)
%CREATEFIT Create plot of data sets and fits
%   CREATEFIT(X,Y)
%   Creates a plot, similar to the plot in the main Curve Fitting Tool,
%   using the data that you provide as input.  You can
%   use this function with the same data you used with CFTOOL
%   or with different data.  You may want to edit the function to
%   customize the code and this help message.
%
%   Number of data sets:  1
%   Number of fits:  1

% Data from data set "y vs. x":
%     X = x:
%     Y = y:
%     Unweighted
%
% Auto-generated by MATLAB on 18-Aug-2010 12:22:31
%
% Code refined to return curefitting structure
% 
%
% File is part of the HAP analysis program
%
% The methods are described in detail in:
%
% Dean II, D. A. (2011) Integrating Formal Language Theory with Mathematical 
% Modeling to Solve Computational Issues in Sleep and Circadian Applications 
% [dissertation]. University of Massachusetts. 239 p.
%
%
% Informatician: Dennis A. Dean, II, Ph.D 
%
% Divison of Sleep Medicine
% Brigham and Women's Hospital
% Harvard Medical School
% 221 Longwood Ave
% Boston, MA  02149
%
% Release: 0.8 Beta
%
% Copyright © [2012] The Brigham and Women's Hospital, Inc. THE BRIGHAM AND 
% WOMEN'S HOSPITAL, INC. AND ITS AGENTS RETAIN ALL RIGHTS TO THIS SOFTWARE 
% AND ARE MAKING THE SOFTWARE AVAILABLE ONLY FOR SCIENTIFIC RESEARCH 
% PURPOSES. THE SOFTWARE SHALL NOT BE USED FOR ANY OTHER PURPOSES, AND IS
% BEING MADE AVAILABLE WITHOUT WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, 
% INCLUDING BUT NOT LIMITED TO IMPLIED WARRANTIES OF MERCHANTABILITY AND 
% FITNESS FOR A PARTICULAR PURPOSE. THE BRIGHAM AND WOMEN'S HOSPITAL, INC. 
% AND ITS AGENTS SHALL NOT BE LIABLE FOR ANY CLAIMS, LIABILITIES, OR LOSSES 
% RELATING TO OR ARISING FROM ANY USE OF THIS SOFTWARE.
%

% Program constants
DEBUG_FLAG = 0;

% --- Create fit "fit 1"
ok_ = isfinite(x) & isfinite(y);
if ~all( ok_ )
    warning( 'GenerateMFile:IgnoringNansAndInfs',...
        'Ignoring NaNs and Infs in data.' );
end
ft_ = fittype('poly1');

% Fit this model using new data
[cf_lin gof_lin] = fit(x(ok_),y(ok_),ft_);
ci_lin = confint(cf_lin);

% Prepare output structure
line_fit_struct = struct('slope', cf_lin.p1, 'intercept', cf_lin.p2...
       ,'slope_up_ci', ci_lin(2,1) ,'slope_lw_ci', ci_lin(1,1) ...
       ,'intercept_up_ci', ci_lin(2,2) ,'intercept_lw_ci', ci_lin(1,2) ...
       ,'gof_sse', gof_lin.sse,'gof_rsquare', gof_lin.rsquare ...
       ,'gof_dfe', gof_lin.dfe,'gof_adjrsquare', gof_lin.adjrsquare ...
       ,'gof_rmse', gof_lin.rmse,'equation',formula(cf_lin));

% Echo output to console during debug
if DEBUG_FLAG == 1
    cf_lin
    gof_lin
    ci_lin
    line_fit_struct
end
   
   
   
